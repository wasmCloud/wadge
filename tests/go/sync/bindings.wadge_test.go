//go:build !wasm && !wasi && !wasip1 && !wasip2 && !wasm_unknown && !tinygo.wasm

// Code generated by wadge-bindgen-go DO NOT EDIT

package sync_test

import (
	go_bytecodealliance_org__cm "go.bytecodealliance.org/cm"
	wadge "go.wasmcloud.dev/wadge"
	go_wasmcloud_dev__wadge__tests__go__sync__bindings__wadge___test__sync__sync "go.wasmcloud.dev/wadge/tests/go/sync/bindings/wadge-test/sync/sync"
	"runtime"
	"unsafe"
)

const _ string = runtime.Compiler

var _ unsafe.Pointer

//go:linkname wasmimport_errorContextDebugMessage go.bytecodealliance.org/cm.wasmimport_errorContextDebugMessage
func wasmimport_errorContextDebugMessage(err uint32, msg unsafe.Pointer) {
	var __p runtime.Pinner
	defer __p.Unpin()
	if __err := wadge.WithCurrentInstance(func(__instance *wadge.Instance) error {
		return __instance.Call("canon", "error-context.debug-message", func() unsafe.Pointer {
			ptr := unsafe.Pointer(&err)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(&msg)
			__p.Pin(ptr)
			return ptr
		}())
	}); __err != nil {
		wadge.CurrentErrorHandler()(__err)
	}
	return
}

//go:linkname wasmimport_errorContextDrop go.bytecodealliance.org/cm.wasmimport_errorContextDrop
func wasmimport_errorContextDrop(err uint32) {
	var __p runtime.Pinner
	defer __p.Unpin()
	if __err := wadge.WithCurrentInstance(func(__instance *wadge.Instance) error {
		return __instance.Call("canon", "error-context.drop", func() unsafe.Pointer {
			ptr := unsafe.Pointer(&err)
			__p.Pin(ptr)
			return ptr
		}())
	}); __err != nil {
		wadge.CurrentErrorHandler()(__err)
	}
	return
}

//go:linkname wasmimport_NewRes go.wasmcloud.dev/wadge/tests/go/sync/bindings/wadge-test/sync/sync.wasmimport_NewRes
func wasmimport_NewRes() (result0 uint32) {
	var __p runtime.Pinner
	defer __p.Unpin()
	if __err := wadge.WithCurrentInstance(func(__instance *wadge.Instance) error {
		return __instance.Call("wadge-test:sync/sync@0.1.0", "[constructor]res", func() unsafe.Pointer {
			ptr := unsafe.Pointer(&result0)
			__p.Pin(ptr)
			return ptr
		}())
	}); __err != nil {
		wadge.CurrentErrorHandler()(__err)
	}
	return
}

//go:linkname wasmimport_ResFoo go.wasmcloud.dev/wadge/tests/go/sync/bindings/wadge-test/sync/sync.wasmimport_ResFoo
func wasmimport_ResFoo(self0 uint32, result *string) {
	var __p runtime.Pinner
	defer __p.Unpin()
	if __err := wadge.WithCurrentInstance(func(__instance *wadge.Instance) error {
		return __instance.Call("wadge-test:sync/sync@0.1.0", "[method]res.foo", func() unsafe.Pointer {
			ptr := unsafe.Pointer(&self0)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(result)
			__p.Pin(ptr)
			return ptr
		}())
	}); __err != nil {
		wadge.CurrentErrorHandler()(__err)
	}
	return
}

//go:linkname wasmimport_ResResourceDrop go.wasmcloud.dev/wadge/tests/go/sync/bindings/wadge-test/sync/sync.wasmimport_ResResourceDrop
func wasmimport_ResResourceDrop(self0 uint32) {
	var __p runtime.Pinner
	defer __p.Unpin()
	if __err := wadge.WithCurrentInstance(func(__instance *wadge.Instance) error {
		return __instance.Call("wadge-test:sync/sync@0.1.0", "[resource-drop]res", func() unsafe.Pointer {
			ptr := unsafe.Pointer(&self0)
			__p.Pin(ptr)
			return ptr
		}())
	}); __err != nil {
		wadge.CurrentErrorHandler()(__err)
	}
	return
}

//go:linkname wasmimport_ResMakeList go.wasmcloud.dev/wadge/tests/go/sync/bindings/wadge-test/sync/sync.wasmimport_ResMakeList
func wasmimport_ResMakeList(result *go_bytecodealliance_org__cm.List[go_wasmcloud_dev__wadge__tests__go__sync__bindings__wadge___test__sync__sync.Res]) {
	var __p runtime.Pinner
	defer __p.Unpin()
	if __err := wadge.WithCurrentInstance(func(__instance *wadge.Instance) error {
		return __instance.Call("wadge-test:sync/sync@0.1.0", "[static]res.make-list", func() unsafe.Pointer {
			ptr := unsafe.Pointer(result)
			__p.Pin(ptr)
			return ptr
		}())
	}); __err != nil {
		wadge.CurrentErrorHandler()(__err)
	}
	return
}

//go:linkname wasmimport_IdentityBool go.wasmcloud.dev/wadge/tests/go/sync/bindings/wadge-test/sync/sync.wasmimport_IdentityBool
func wasmimport_IdentityBool(arg0 uint32) (result0 uint32) {
	var __p runtime.Pinner
	defer __p.Unpin()
	if __err := wadge.WithCurrentInstance(func(__instance *wadge.Instance) error {
		return __instance.Call("wadge-test:sync/sync@0.1.0", "identity-bool", func() unsafe.Pointer {
			ptr := unsafe.Pointer(&arg0)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(&result0)
			__p.Pin(ptr)
			return ptr
		}())
	}); __err != nil {
		wadge.CurrentErrorHandler()(__err)
	}
	return
}

//go:linkname wasmimport_IdentityChar go.wasmcloud.dev/wadge/tests/go/sync/bindings/wadge-test/sync/sync.wasmimport_IdentityChar
func wasmimport_IdentityChar(arg0 uint32) (result0 uint32) {
	var __p runtime.Pinner
	defer __p.Unpin()
	if __err := wadge.WithCurrentInstance(func(__instance *wadge.Instance) error {
		return __instance.Call("wadge-test:sync/sync@0.1.0", "identity-char", func() unsafe.Pointer {
			ptr := unsafe.Pointer(&arg0)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(&result0)
			__p.Pin(ptr)
			return ptr
		}())
	}); __err != nil {
		wadge.CurrentErrorHandler()(__err)
	}
	return
}

//go:linkname wasmimport_IdentityEnum go.wasmcloud.dev/wadge/tests/go/sync/bindings/wadge-test/sync/sync.wasmimport_IdentityEnum
func wasmimport_IdentityEnum(arg0 uint32) (result0 uint32) {
	var __p runtime.Pinner
	defer __p.Unpin()
	if __err := wadge.WithCurrentInstance(func(__instance *wadge.Instance) error {
		return __instance.Call("wadge-test:sync/sync@0.1.0", "identity-enum", func() unsafe.Pointer {
			ptr := unsafe.Pointer(&arg0)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(&result0)
			__p.Pin(ptr)
			return ptr
		}())
	}); __err != nil {
		wadge.CurrentErrorHandler()(__err)
	}
	return
}

//go:linkname wasmimport_IdentityF32 go.wasmcloud.dev/wadge/tests/go/sync/bindings/wadge-test/sync/sync.wasmimport_IdentityF32
func wasmimport_IdentityF32(arg0 float32) (result0 float32) {
	var __p runtime.Pinner
	defer __p.Unpin()
	if __err := wadge.WithCurrentInstance(func(__instance *wadge.Instance) error {
		return __instance.Call("wadge-test:sync/sync@0.1.0", "identity-f32", func() unsafe.Pointer {
			ptr := unsafe.Pointer(&arg0)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(&result0)
			__p.Pin(ptr)
			return ptr
		}())
	}); __err != nil {
		wadge.CurrentErrorHandler()(__err)
	}
	return
}

//go:linkname wasmimport_IdentityF64 go.wasmcloud.dev/wadge/tests/go/sync/bindings/wadge-test/sync/sync.wasmimport_IdentityF64
func wasmimport_IdentityF64(arg0 float64) (result0 float64) {
	var __p runtime.Pinner
	defer __p.Unpin()
	if __err := wadge.WithCurrentInstance(func(__instance *wadge.Instance) error {
		return __instance.Call("wadge-test:sync/sync@0.1.0", "identity-f64", func() unsafe.Pointer {
			ptr := unsafe.Pointer(&arg0)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(&result0)
			__p.Pin(ptr)
			return ptr
		}())
	}); __err != nil {
		wadge.CurrentErrorHandler()(__err)
	}
	return
}

//go:linkname wasmimport_IdentityFlags go.wasmcloud.dev/wadge/tests/go/sync/bindings/wadge-test/sync/sync.wasmimport_IdentityFlags
func wasmimport_IdentityFlags(arg0 uint32) (result0 uint32) {
	var __p runtime.Pinner
	defer __p.Unpin()
	if __err := wadge.WithCurrentInstance(func(__instance *wadge.Instance) error {
		return __instance.Call("wadge-test:sync/sync@0.1.0", "identity-flags", func() unsafe.Pointer {
			ptr := unsafe.Pointer(&arg0)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(&result0)
			__p.Pin(ptr)
			return ptr
		}())
	}); __err != nil {
		wadge.CurrentErrorHandler()(__err)
	}
	return
}

//go:linkname wasmimport_IdentityListBool go.wasmcloud.dev/wadge/tests/go/sync/bindings/wadge-test/sync/sync.wasmimport_IdentityListBool
func wasmimport_IdentityListBool(arg0 *bool, arg1 uint32, result *go_bytecodealliance_org__cm.List[bool]) {
	var __p runtime.Pinner
	defer __p.Unpin()
	if __err := wadge.WithCurrentInstance(func(__instance *wadge.Instance) error {
		return __instance.Call("wadge-test:sync/sync@0.1.0", "identity-list-bool", func() unsafe.Pointer {
			ptr := unsafe.Pointer(arg0)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(&arg1)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(result)
			__p.Pin(ptr)
			return ptr
		}())
	}); __err != nil {
		wadge.CurrentErrorHandler()(__err)
	}
	return
}

//go:linkname wasmimport_IdentityListEnum go.wasmcloud.dev/wadge/tests/go/sync/bindings/wadge-test/sync/sync.wasmimport_IdentityListEnum
func wasmimport_IdentityListEnum(arg0 *go_wasmcloud_dev__wadge__tests__go__sync__bindings__wadge___test__sync__sync.Foobar, arg1 uint32, result *go_bytecodealliance_org__cm.List[go_wasmcloud_dev__wadge__tests__go__sync__bindings__wadge___test__sync__sync.Foobar]) {
	var __p runtime.Pinner
	defer __p.Unpin()
	if __err := wadge.WithCurrentInstance(func(__instance *wadge.Instance) error {
		return __instance.Call("wadge-test:sync/sync@0.1.0", "identity-list-enum", func() unsafe.Pointer {
			ptr := unsafe.Pointer(arg0)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(&arg1)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(result)
			__p.Pin(ptr)
			return ptr
		}())
	}); __err != nil {
		wadge.CurrentErrorHandler()(__err)
	}
	return
}

//go:linkname wasmimport_IdentityListFlags go.wasmcloud.dev/wadge/tests/go/sync/bindings/wadge-test/sync/sync.wasmimport_IdentityListFlags
func wasmimport_IdentityListFlags(arg0 *go_wasmcloud_dev__wadge__tests__go__sync__bindings__wadge___test__sync__sync.Abc, arg1 uint32, result *go_bytecodealliance_org__cm.List[go_wasmcloud_dev__wadge__tests__go__sync__bindings__wadge___test__sync__sync.Abc]) {
	var __p runtime.Pinner
	defer __p.Unpin()
	if __err := wadge.WithCurrentInstance(func(__instance *wadge.Instance) error {
		return __instance.Call("wadge-test:sync/sync@0.1.0", "identity-list-flags", func() unsafe.Pointer {
			ptr := unsafe.Pointer(arg0)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(&arg1)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(result)
			__p.Pin(ptr)
			return ptr
		}())
	}); __err != nil {
		wadge.CurrentErrorHandler()(__err)
	}
	return
}

//go:linkname wasmimport_IdentityListListString go.wasmcloud.dev/wadge/tests/go/sync/bindings/wadge-test/sync/sync.wasmimport_IdentityListListString
func wasmimport_IdentityListListString(arg0 *go_bytecodealliance_org__cm.List[string], arg1 uint32, result *go_bytecodealliance_org__cm.List[go_bytecodealliance_org__cm.List[string]]) {
	var __p runtime.Pinner
	defer __p.Unpin()
	if __err := wadge.WithCurrentInstance(func(__instance *wadge.Instance) error {
		return __instance.Call("wadge-test:sync/sync@0.1.0", "identity-list-list-string", func() unsafe.Pointer {
			ptr := unsafe.Pointer(arg0)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(&arg1)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(result)
			__p.Pin(ptr)
			return ptr
		}())
	}); __err != nil {
		wadge.CurrentErrorHandler()(__err)
	}
	return
}

//go:linkname wasmimport_IdentityListOptionString go.wasmcloud.dev/wadge/tests/go/sync/bindings/wadge-test/sync/sync.wasmimport_IdentityListOptionString
func wasmimport_IdentityListOptionString(arg0 *go_bytecodealliance_org__cm.Option[string], arg1 uint32, result *go_bytecodealliance_org__cm.List[go_bytecodealliance_org__cm.Option[string]]) {
	var __p runtime.Pinner
	defer __p.Unpin()
	if __err := wadge.WithCurrentInstance(func(__instance *wadge.Instance) error {
		return __instance.Call("wadge-test:sync/sync@0.1.0", "identity-list-option-string", func() unsafe.Pointer {
			ptr := unsafe.Pointer(arg0)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(&arg1)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(result)
			__p.Pin(ptr)
			return ptr
		}())
	}); __err != nil {
		wadge.CurrentErrorHandler()(__err)
	}
	return
}

//go:linkname wasmimport_IdentityListRecordPrimitives go.wasmcloud.dev/wadge/tests/go/sync/bindings/wadge-test/sync/sync.wasmimport_IdentityListRecordPrimitives
func wasmimport_IdentityListRecordPrimitives(arg0 *go_wasmcloud_dev__wadge__tests__go__sync__bindings__wadge___test__sync__sync.Primitives, arg1 uint32, result *go_bytecodealliance_org__cm.List[go_wasmcloud_dev__wadge__tests__go__sync__bindings__wadge___test__sync__sync.Primitives]) {
	var __p runtime.Pinner
	defer __p.Unpin()
	if __err := wadge.WithCurrentInstance(func(__instance *wadge.Instance) error {
		return __instance.Call("wadge-test:sync/sync@0.1.0", "identity-list-record-primitives", func() unsafe.Pointer {
			ptr := unsafe.Pointer(arg0)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(&arg1)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(result)
			__p.Pin(ptr)
			return ptr
		}())
	}); __err != nil {
		wadge.CurrentErrorHandler()(__err)
	}
	return
}

//go:linkname wasmimport_IdentityListResultString go.wasmcloud.dev/wadge/tests/go/sync/bindings/wadge-test/sync/sync.wasmimport_IdentityListResultString
func wasmimport_IdentityListResultString(arg0 *go_bytecodealliance_org__cm.Result[string, string, struct{}], arg1 uint32, result *go_bytecodealliance_org__cm.List[go_bytecodealliance_org__cm.Result[string, string, struct{}]]) {
	var __p runtime.Pinner
	defer __p.Unpin()
	if __err := wadge.WithCurrentInstance(func(__instance *wadge.Instance) error {
		return __instance.Call("wadge-test:sync/sync@0.1.0", "identity-list-result-string", func() unsafe.Pointer {
			ptr := unsafe.Pointer(arg0)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(&arg1)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(result)
			__p.Pin(ptr)
			return ptr
		}())
	}); __err != nil {
		wadge.CurrentErrorHandler()(__err)
	}
	return
}

//go:linkname wasmimport_IdentityListString go.wasmcloud.dev/wadge/tests/go/sync/bindings/wadge-test/sync/sync.wasmimport_IdentityListString
func wasmimport_IdentityListString(arg0 *string, arg1 uint32, result *go_bytecodealliance_org__cm.List[string]) {
	var __p runtime.Pinner
	defer __p.Unpin()
	if __err := wadge.WithCurrentInstance(func(__instance *wadge.Instance) error {
		return __instance.Call("wadge-test:sync/sync@0.1.0", "identity-list-string", func() unsafe.Pointer {
			ptr := unsafe.Pointer(arg0)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(&arg1)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(result)
			__p.Pin(ptr)
			return ptr
		}())
	}); __err != nil {
		wadge.CurrentErrorHandler()(__err)
	}
	return
}

//go:linkname wasmimport_IdentityListU16 go.wasmcloud.dev/wadge/tests/go/sync/bindings/wadge-test/sync/sync.wasmimport_IdentityListU16
func wasmimport_IdentityListU16(arg0 *uint16, arg1 uint32, result *go_bytecodealliance_org__cm.List[uint16]) {
	var __p runtime.Pinner
	defer __p.Unpin()
	if __err := wadge.WithCurrentInstance(func(__instance *wadge.Instance) error {
		return __instance.Call("wadge-test:sync/sync@0.1.0", "identity-list-u16", func() unsafe.Pointer {
			ptr := unsafe.Pointer(arg0)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(&arg1)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(result)
			__p.Pin(ptr)
			return ptr
		}())
	}); __err != nil {
		wadge.CurrentErrorHandler()(__err)
	}
	return
}

//go:linkname wasmimport_IdentityListVariant go.wasmcloud.dev/wadge/tests/go/sync/bindings/wadge-test/sync/sync.wasmimport_IdentityListVariant
func wasmimport_IdentityListVariant(arg0 *go_wasmcloud_dev__wadge__tests__go__sync__bindings__wadge___test__sync__sync.Var, arg1 uint32, result *go_bytecodealliance_org__cm.List[go_wasmcloud_dev__wadge__tests__go__sync__bindings__wadge___test__sync__sync.Var]) {
	var __p runtime.Pinner
	defer __p.Unpin()
	if __err := wadge.WithCurrentInstance(func(__instance *wadge.Instance) error {
		return __instance.Call("wadge-test:sync/sync@0.1.0", "identity-list-variant", func() unsafe.Pointer {
			ptr := unsafe.Pointer(arg0)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(&arg1)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(result)
			__p.Pin(ptr)
			return ptr
		}())
	}); __err != nil {
		wadge.CurrentErrorHandler()(__err)
	}
	return
}

//go:linkname wasmimport_IdentityOptionString go.wasmcloud.dev/wadge/tests/go/sync/bindings/wadge-test/sync/sync.wasmimport_IdentityOptionString
func wasmimport_IdentityOptionString(arg0 uint32, arg1 *uint8, arg2 uint32, result *go_bytecodealliance_org__cm.Option[string]) {
	var __p runtime.Pinner
	defer __p.Unpin()
	if __err := wadge.WithCurrentInstance(func(__instance *wadge.Instance) error {
		return __instance.Call("wadge-test:sync/sync@0.1.0", "identity-option-string", func() unsafe.Pointer {
			ptr := unsafe.Pointer(&arg0)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(arg1)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(&arg2)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(result)
			__p.Pin(ptr)
			return ptr
		}())
	}); __err != nil {
		wadge.CurrentErrorHandler()(__err)
	}
	return
}

//go:linkname wasmimport_IdentityPrimitives go.wasmcloud.dev/wadge/tests/go/sync/bindings/wadge-test/sync/sync.wasmimport_IdentityPrimitives
func wasmimport_IdentityPrimitives(a0 uint32, b0 uint32, c0 uint32, d0 uint64, e0 uint32, f0 uint32, g0 uint32, h0 uint64, i0 float32, j0 float64, k0 uint32, l0 uint32, m0 *uint8, m1 uint32, result *go_bytecodealliance_org__cm.Tuple13[uint8, uint16, uint32, uint64, int8, int16, int32, int64, float32, float64, bool, rune, string]) {
	var __p runtime.Pinner
	defer __p.Unpin()
	if __err := wadge.WithCurrentInstance(func(__instance *wadge.Instance) error {
		return __instance.Call("wadge-test:sync/sync@0.1.0", "identity-primitives", func() unsafe.Pointer {
			ptr := unsafe.Pointer(&a0)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(&b0)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(&c0)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(&d0)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(&e0)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(&f0)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(&g0)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(&h0)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(&i0)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(&j0)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(&k0)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(&l0)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(m0)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(&m1)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(result)
			__p.Pin(ptr)
			return ptr
		}())
	}); __err != nil {
		wadge.CurrentErrorHandler()(__err)
	}
	return
}

//go:linkname wasmimport_IdentityRecordPrimitives go.wasmcloud.dev/wadge/tests/go/sync/bindings/wadge-test/sync/sync.wasmimport_IdentityRecordPrimitives
func wasmimport_IdentityRecordPrimitives(arg0 uint32, arg1 uint32, arg2 uint32, arg3 uint64, arg4 uint32, arg5 uint32, arg6 uint32, arg7 uint64, arg8 float32, arg9 float64, arg10 uint32, arg11 uint32, arg12 *uint8, arg13 uint32, result *go_wasmcloud_dev__wadge__tests__go__sync__bindings__wadge___test__sync__sync.Primitives) {
	var __p runtime.Pinner
	defer __p.Unpin()
	if __err := wadge.WithCurrentInstance(func(__instance *wadge.Instance) error {
		return __instance.Call("wadge-test:sync/sync@0.1.0", "identity-record-primitives", func() unsafe.Pointer {
			ptr := unsafe.Pointer(&arg0)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(&arg1)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(&arg2)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(&arg3)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(&arg4)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(&arg5)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(&arg6)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(&arg7)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(&arg8)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(&arg9)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(&arg10)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(&arg11)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(arg12)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(&arg13)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(result)
			__p.Pin(ptr)
			return ptr
		}())
	}); __err != nil {
		wadge.CurrentErrorHandler()(__err)
	}
	return
}

//go:linkname wasmimport_IdentityRecordRec go.wasmcloud.dev/wadge/tests/go/sync/bindings/wadge-test/sync/sync.wasmimport_IdentityRecordRec
func wasmimport_IdentityRecordRec(arg0 *uint8, arg1 uint32, result *go_wasmcloud_dev__wadge__tests__go__sync__bindings__wadge___test__sync__sync.Rec) {
	var __p runtime.Pinner
	defer __p.Unpin()
	if __err := wadge.WithCurrentInstance(func(__instance *wadge.Instance) error {
		return __instance.Call("wadge-test:sync/sync@0.1.0", "identity-record-rec", func() unsafe.Pointer {
			ptr := unsafe.Pointer(arg0)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(&arg1)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(result)
			__p.Pin(ptr)
			return ptr
		}())
	}); __err != nil {
		wadge.CurrentErrorHandler()(__err)
	}
	return
}

//go:linkname wasmimport_IdentityResultString go.wasmcloud.dev/wadge/tests/go/sync/bindings/wadge-test/sync/sync.wasmimport_IdentityResultString
func wasmimport_IdentityResultString(arg0 uint32, arg1 *uint8, arg2 uint32, result *go_bytecodealliance_org__cm.Result[string, string, struct{}]) {
	var __p runtime.Pinner
	defer __p.Unpin()
	if __err := wadge.WithCurrentInstance(func(__instance *wadge.Instance) error {
		return __instance.Call("wadge-test:sync/sync@0.1.0", "identity-result-string", func() unsafe.Pointer {
			ptr := unsafe.Pointer(&arg0)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(arg1)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(&arg2)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(result)
			__p.Pin(ptr)
			return ptr
		}())
	}); __err != nil {
		wadge.CurrentErrorHandler()(__err)
	}
	return
}

//go:linkname wasmimport_IdentityS16 go.wasmcloud.dev/wadge/tests/go/sync/bindings/wadge-test/sync/sync.wasmimport_IdentityS16
func wasmimport_IdentityS16(arg0 uint32) (result0 uint32) {
	var __p runtime.Pinner
	defer __p.Unpin()
	if __err := wadge.WithCurrentInstance(func(__instance *wadge.Instance) error {
		return __instance.Call("wadge-test:sync/sync@0.1.0", "identity-s16", func() unsafe.Pointer {
			ptr := unsafe.Pointer(&arg0)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(&result0)
			__p.Pin(ptr)
			return ptr
		}())
	}); __err != nil {
		wadge.CurrentErrorHandler()(__err)
	}
	return
}

//go:linkname wasmimport_IdentityS32 go.wasmcloud.dev/wadge/tests/go/sync/bindings/wadge-test/sync/sync.wasmimport_IdentityS32
func wasmimport_IdentityS32(arg0 uint32) (result0 uint32) {
	var __p runtime.Pinner
	defer __p.Unpin()
	if __err := wadge.WithCurrentInstance(func(__instance *wadge.Instance) error {
		return __instance.Call("wadge-test:sync/sync@0.1.0", "identity-s32", func() unsafe.Pointer {
			ptr := unsafe.Pointer(&arg0)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(&result0)
			__p.Pin(ptr)
			return ptr
		}())
	}); __err != nil {
		wadge.CurrentErrorHandler()(__err)
	}
	return
}

//go:linkname wasmimport_IdentityS64 go.wasmcloud.dev/wadge/tests/go/sync/bindings/wadge-test/sync/sync.wasmimport_IdentityS64
func wasmimport_IdentityS64(arg0 uint64) (result0 uint64) {
	var __p runtime.Pinner
	defer __p.Unpin()
	if __err := wadge.WithCurrentInstance(func(__instance *wadge.Instance) error {
		return __instance.Call("wadge-test:sync/sync@0.1.0", "identity-s64", func() unsafe.Pointer {
			ptr := unsafe.Pointer(&arg0)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(&result0)
			__p.Pin(ptr)
			return ptr
		}())
	}); __err != nil {
		wadge.CurrentErrorHandler()(__err)
	}
	return
}

//go:linkname wasmimport_IdentityS8 go.wasmcloud.dev/wadge/tests/go/sync/bindings/wadge-test/sync/sync.wasmimport_IdentityS8
func wasmimport_IdentityS8(arg0 uint32) (result0 uint32) {
	var __p runtime.Pinner
	defer __p.Unpin()
	if __err := wadge.WithCurrentInstance(func(__instance *wadge.Instance) error {
		return __instance.Call("wadge-test:sync/sync@0.1.0", "identity-s8", func() unsafe.Pointer {
			ptr := unsafe.Pointer(&arg0)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(&result0)
			__p.Pin(ptr)
			return ptr
		}())
	}); __err != nil {
		wadge.CurrentErrorHandler()(__err)
	}
	return
}

//go:linkname wasmimport_IdentityString go.wasmcloud.dev/wadge/tests/go/sync/bindings/wadge-test/sync/sync.wasmimport_IdentityString
func wasmimport_IdentityString(arg0 *uint8, arg1 uint32, result *string) {
	var __p runtime.Pinner
	defer __p.Unpin()
	if __err := wadge.WithCurrentInstance(func(__instance *wadge.Instance) error {
		return __instance.Call("wadge-test:sync/sync@0.1.0", "identity-string", func() unsafe.Pointer {
			ptr := unsafe.Pointer(arg0)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(&arg1)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(result)
			__p.Pin(ptr)
			return ptr
		}())
	}); __err != nil {
		wadge.CurrentErrorHandler()(__err)
	}
	return
}

//go:linkname wasmimport_IdentityTuple go.wasmcloud.dev/wadge/tests/go/sync/bindings/wadge-test/sync/sync.wasmimport_IdentityTuple
func wasmimport_IdentityTuple(arg0 uint32, arg1 uint32, arg2 uint32, arg3 uint64, arg4 uint32, arg5 uint32, arg6 uint32, arg7 uint64, arg8 float32, arg9 float64, arg10 uint32, arg11 uint32, arg12 *uint8, arg13 uint32, result *go_bytecodealliance_org__cm.Tuple13[uint8, uint16, uint32, uint64, int8, int16, int32, int64, float32, float64, bool, rune, string]) {
	var __p runtime.Pinner
	defer __p.Unpin()
	if __err := wadge.WithCurrentInstance(func(__instance *wadge.Instance) error {
		return __instance.Call("wadge-test:sync/sync@0.1.0", "identity-tuple", func() unsafe.Pointer {
			ptr := unsafe.Pointer(&arg0)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(&arg1)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(&arg2)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(&arg3)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(&arg4)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(&arg5)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(&arg6)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(&arg7)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(&arg8)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(&arg9)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(&arg10)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(&arg11)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(arg12)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(&arg13)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(result)
			__p.Pin(ptr)
			return ptr
		}())
	}); __err != nil {
		wadge.CurrentErrorHandler()(__err)
	}
	return
}

//go:linkname wasmimport_IdentityU16 go.wasmcloud.dev/wadge/tests/go/sync/bindings/wadge-test/sync/sync.wasmimport_IdentityU16
func wasmimport_IdentityU16(arg0 uint32) (result0 uint32) {
	var __p runtime.Pinner
	defer __p.Unpin()
	if __err := wadge.WithCurrentInstance(func(__instance *wadge.Instance) error {
		return __instance.Call("wadge-test:sync/sync@0.1.0", "identity-u16", func() unsafe.Pointer {
			ptr := unsafe.Pointer(&arg0)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(&result0)
			__p.Pin(ptr)
			return ptr
		}())
	}); __err != nil {
		wadge.CurrentErrorHandler()(__err)
	}
	return
}

//go:linkname wasmimport_IdentityU32 go.wasmcloud.dev/wadge/tests/go/sync/bindings/wadge-test/sync/sync.wasmimport_IdentityU32
func wasmimport_IdentityU32(arg0 uint32) (result0 uint32) {
	var __p runtime.Pinner
	defer __p.Unpin()
	if __err := wadge.WithCurrentInstance(func(__instance *wadge.Instance) error {
		return __instance.Call("wadge-test:sync/sync@0.1.0", "identity-u32", func() unsafe.Pointer {
			ptr := unsafe.Pointer(&arg0)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(&result0)
			__p.Pin(ptr)
			return ptr
		}())
	}); __err != nil {
		wadge.CurrentErrorHandler()(__err)
	}
	return
}

//go:linkname wasmimport_IdentityU64 go.wasmcloud.dev/wadge/tests/go/sync/bindings/wadge-test/sync/sync.wasmimport_IdentityU64
func wasmimport_IdentityU64(arg0 uint64) (result0 uint64) {
	var __p runtime.Pinner
	defer __p.Unpin()
	if __err := wadge.WithCurrentInstance(func(__instance *wadge.Instance) error {
		return __instance.Call("wadge-test:sync/sync@0.1.0", "identity-u64", func() unsafe.Pointer {
			ptr := unsafe.Pointer(&arg0)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(&result0)
			__p.Pin(ptr)
			return ptr
		}())
	}); __err != nil {
		wadge.CurrentErrorHandler()(__err)
	}
	return
}

//go:linkname wasmimport_IdentityU8 go.wasmcloud.dev/wadge/tests/go/sync/bindings/wadge-test/sync/sync.wasmimport_IdentityU8
func wasmimport_IdentityU8(arg0 uint32) (result0 uint32) {
	var __p runtime.Pinner
	defer __p.Unpin()
	if __err := wadge.WithCurrentInstance(func(__instance *wadge.Instance) error {
		return __instance.Call("wadge-test:sync/sync@0.1.0", "identity-u8", func() unsafe.Pointer {
			ptr := unsafe.Pointer(&arg0)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(&result0)
			__p.Pin(ptr)
			return ptr
		}())
	}); __err != nil {
		wadge.CurrentErrorHandler()(__err)
	}
	return
}

//go:linkname wasmimport_IdentityVariant go.wasmcloud.dev/wadge/tests/go/sync/bindings/wadge-test/sync/sync.wasmimport_IdentityVariant
func wasmimport_IdentityVariant(arg0 uint32, arg1 *uint8, arg2 uint32, result *go_wasmcloud_dev__wadge__tests__go__sync__bindings__wadge___test__sync__sync.Var) {
	var __p runtime.Pinner
	defer __p.Unpin()
	if __err := wadge.WithCurrentInstance(func(__instance *wadge.Instance) error {
		return __instance.Call("wadge-test:sync/sync@0.1.0", "identity-variant", func() unsafe.Pointer {
			ptr := unsafe.Pointer(&arg0)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(arg1)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(&arg2)
			__p.Pin(ptr)
			return ptr
		}(), func() unsafe.Pointer {
			ptr := unsafe.Pointer(result)
			__p.Pin(ptr)
			return ptr
		}())
	}); __err != nil {
		wadge.CurrentErrorHandler()(__err)
	}
	return
}
