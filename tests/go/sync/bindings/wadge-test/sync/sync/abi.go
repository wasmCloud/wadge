// Code generated by wit-bindgen-go. DO NOT EDIT.

package sync

import (
	"github.com/bytecodealliance/wasm-tools-go/cm"
)

func lower_RecNested(v RecNested) (f0 *uint8, f1 uint32) {
	f0, f1 = cm.LowerString(v.Foo)
	return
}

func lower_Rec(v Rec) (f0 *uint8, f1 uint32) {
	f0, f1 = lower_RecNested(v.Nested)
	return
}

func lower_Var(v Var) (f0 uint32, f1 *uint8, f2 uint32) {
	f0 = (uint32)(v.Tag())
	switch f0 {
	case 0: // some
		v1, v2 := lower_Rec(*v.Some())
		f1 = (*uint8)(v1)
		f2 = (uint32)(v2)
	}
	return
}

func lower_OptionString(v cm.Option[string]) (f0 uint32, f1 *uint8, f2 uint32) {
	some := v.Some()
	if some != nil {
		f0 = 1
		v1, v2 := cm.LowerString(*some)
		f1 = (*uint8)(v1)
		f2 = (uint32)(v2)
	}
	return
}

func lower_ResultString(v cm.Result[string, string, struct{}]) (f0 uint32, f1 *uint8, f2 uint32) {
	if v.IsOK() {
		v1, v2 := cm.LowerString(*v.OK())
		f1 = (*uint8)(v1)
		f2 = (uint32)(v2)
	} else {
		f0 = 1
	}
	return
}

func lower_Primitives(v Primitives) (f0 uint32, f1 uint32, f2 uint32, f3 uint64, f4 uint32, f5 uint32, f6 uint32, f7 uint64, f8 float32, f9 float64, f10 uint32, f11 uint32, f12 *uint8, f13 uint32) {
	f0 = (uint32)(v.A)
	f1 = (uint32)(v.B)
	f2 = (uint32)(v.C)
	f3 = (uint64)(v.D)
	f4 = (uint32)(v.E)
	f5 = (uint32)(v.F)
	f6 = (uint32)(v.G)
	f7 = (uint64)(v.H)
	f8 = (float32)(v.I)
	f9 = (float64)(v.J)
	f10 = cm.BoolToU32(v.K)
	f11 = (uint32)(v.L)
	f12, f13 = cm.LowerString(v.M)
	return
}

func lower_TupleU8U16U32U64S8S16S32S64F32F64BoolCharString(v cm.Tuple13[uint8, uint16, uint32, uint64, int8, int16, int32, int64, float32, float64, bool, rune, string]) (f0 uint32, f1 uint32, f2 uint32, f3 uint64, f4 uint32, f5 uint32, f6 uint32, f7 uint64, f8 float32, f9 float64, f10 uint32, f11 uint32, f12 *uint8, f13 uint32) {
	f0 = (uint32)(v.F0)
	f1 = (uint32)(v.F1)
	f2 = (uint32)(v.F2)
	f3 = (uint64)(v.F3)
	f4 = (uint32)(v.F4)
	f5 = (uint32)(v.F5)
	f6 = (uint32)(v.F6)
	f7 = (uint64)(v.F7)
	f8 = (float32)(v.F8)
	f9 = (float64)(v.F9)
	f10 = cm.BoolToU32(v.F10)
	f11 = (uint32)(v.F11)
	f12, f13 = cm.LowerString(v.F12)
	return
}
